name: Build and Release

permissions:
  contents: write

on:
  release:
    types: [created]

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Debug environment
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          dir
          echo "Python version:"
          python --version
          echo "Django version:"
          python -c "import django; print(django.__version__)"
      - name: Collect static files
        run: |
          python network_scanner/manage.py collectstatic --noinput --verbosity 2
          echo "Contents of project root after collectstatic:"
          dir
          echo "Contents of network_scanner directory:"
          dir network_scanner
      - name: Build with PyInstaller
        run: |
          pyinstaller --name=FastIPScanner --onefile --windowed `
            --add-data "network_scanner;network_scanner" `
            --add-data "network_scanner/network_scanner/app_info.py;network_scanner" `
            --add-data "network_scanner/staticfiles;staticfiles" `
            --add-data "network_scanner/scanner/migrations;network_scanner/scanner/migrations" `
            network_scanner/manage.py
      - name: Install Inno Setup
        run: choco install innosetup -y
      - name: Get App Info
        run: |
          python get_app_info.py | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Create Inno Setup Installer
        run: |
          dir dist
          iscc ${{ env.APP_INFO }} nettools_setup.iss
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: FastIPScanner-Installer.exe
          path: ./Output/FastIPScanner_setup_*.exe

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          brew install create-dmg
      - name: Build with PyInstaller
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.15"
        run: |
          pyinstaller --name=FastIPScanner --onefile --windowed \
            --add-data "network_scanner:network_scanner" \
            --add-data "network_scanner/network_scanner/app_info.py:network_scanner" \
            --target-architecture universal2 \
            network_scanner/manage.py
      - name: Code Sign Application
        env:
          CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          /usr/bin/codesign --force -s "Developer ID Application" --options runtime ./dist/FastIPScanner.app -v
      - name: Create DMG
        run: |
          create-dmg \
            --volname "Fast IP Scanner Installer" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "FastIPScanner.app" 200 190 \
            --hide-extension "FastIPScanner.app" \
            --app-drop-link 600 185 \
            "FastIPScanner-Installer.dmg" \
            "dist/FastIPScanner.app"
      - name: Notarize DMG
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          xcrun notarytool submit FastIPScanner-Installer.dmg --wait --apple-id "$APPLE_ID" --password "$APPLE_ID_PASSWORD" --team-id "$TEAM_ID"
          xcrun stapler staple FastIPScanner-Installer.dmg
      - name: Upload macOS Installer
        uses: actions/upload-artifact@v4
        with:
          name: FastIPScanner-Installer.dmg
          path: ./FastIPScanner-Installer.dmg
